import React, { useEffect, useState } from 'react';
import { useLocation } from 'react-router-dom';
import Hero from '../components/Hero';
import Promotions from '../components/Promotions';
import Footer from '../components/Footer';
import Loading from '../components/Loading';
import api from '../api';

const ApprovalPage = () => {
  const location = useLocation();
  const [isLoading, setIsLoading] = useState(true);
  const [isApproved, setIsApproved] = useState(null);
  const [ticketDetails, setTicketDetails] = useState(null);

  // Function to get `token` and `email` from URL
  const getTokenAndEmail = () => {
    const pathParts = location.pathname.split('/');
    const token = pathParts[2];
    const email = pathParts[3];
    return { token, email };
  };

  useEffect(() => {
    const { token, email } = getTokenAndEmail();

    const validateToken = async () => {
      try {
        const response = await api.post('/validate-token', { token, email });
        if (response.data.isValid && !response.data.stamp) {
          setTicketDetails(response.data.ticketDetails);
          setIsApproved(true);
          await api.post('/set-stamp', { token, email });
        } else {
          setIsApproved(true);
        }
      } catch (error) {
        console.error('Error validating token:', error);
        setIsApproved(true);
      } finally {
        setIsLoading(false);
      }
    };

    validateToken();
  }, [location]);

  if (isLoading) {
    return (
      <div className="bg-white min-h-screen flex justify-center items-center">
        <Loading />
      </div>
    );
  }

  if (isApproved === false) {
    return (
      <div className="text-center mt-10">
        <h2 className="text-xl font-bold">Ticket request has been cancelled or token is invalid.</h2>
      </div>
    );
  }

  return (
    <React.Fragment>
      <Hero />
      <Promotions />
      <div className="p-4 bg-white max-w-xl mx-auto">
        {ticketDetails && (
          <div className="shadow-lg rounded-lg overflow-hidden">
            <img
              className="w-full h-48 object-cover"
              src={ticketDetails.coverImage}
              alt={ticketDetails.eventName}
            />
            <div className="p-6">
              <h2 className="text-2xl font-bold mb-2">{ticketDetails.eventName}</h2>
              <p className="text-gray-600 mb-1">{ticketDetails.date} @ {ticketDetails.time}</p>
              <p className="text-gray-600 mb-4">{ticketDetails.venue}, {ticketDetails.location}</p>
              <div className="text-gray-800">
                <p>Section {ticketDetails.section}, Row {ticketDetails.row}, Seat {ticketDetails.seat}</p>
              </div>
            </div>
          </div>
        )}
      </div>
      <Footer />
    </React.Fragment>
  );
};

export default ApprovalPage;
